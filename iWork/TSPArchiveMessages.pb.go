// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v4.24.4
// source: TSPArchiveMessages.proto

package tsp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FieldInfo_Type int32

const (
	FieldInfo_Value           FieldInfo_Type = 0
	FieldInfo_ObjectReference FieldInfo_Type = 1
	FieldInfo_DataReference   FieldInfo_Type = 2
	FieldInfo_Message         FieldInfo_Type = 3
)

// Enum value maps for FieldInfo_Type.
var (
	FieldInfo_Type_name = map[int32]string{
		0: "Value",
		1: "ObjectReference",
		2: "DataReference",
		3: "Message",
	}
	FieldInfo_Type_value = map[string]int32{
		"Value":           0,
		"ObjectReference": 1,
		"DataReference":   2,
		"Message":         3,
	}
)

func (x FieldInfo_Type) Enum() *FieldInfo_Type {
	p := new(FieldInfo_Type)
	*p = x
	return p
}

func (x FieldInfo_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldInfo_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_TSPArchiveMessages_proto_enumTypes[0].Descriptor()
}

func (FieldInfo_Type) Type() protoreflect.EnumType {
	return &file_TSPArchiveMessages_proto_enumTypes[0]
}

func (x FieldInfo_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FieldInfo_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FieldInfo_Type(num)
	return nil
}

// Deprecated: Use FieldInfo_Type.Descriptor instead.
func (FieldInfo_Type) EnumDescriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{2, 0}
}

type FieldInfo_Rule int32

const (
	FieldInfo_IgnoreAndDrop     FieldInfo_Rule = 0
	FieldInfo_IgnoreAndPreserve FieldInfo_Rule = 1
	FieldInfo_MustUnderstand    FieldInfo_Rule = 2
	FieldInfo_NotSupported      FieldInfo_Rule = -1
)

// Enum value maps for FieldInfo_Rule.
var (
	FieldInfo_Rule_name = map[int32]string{
		0:  "IgnoreAndDrop",
		1:  "IgnoreAndPreserve",
		2:  "MustUnderstand",
		-1: "NotSupported",
	}
	FieldInfo_Rule_value = map[string]int32{
		"IgnoreAndDrop":     0,
		"IgnoreAndPreserve": 1,
		"MustUnderstand":    2,
		"NotSupported":      -1,
	}
)

func (x FieldInfo_Rule) Enum() *FieldInfo_Rule {
	p := new(FieldInfo_Rule)
	*p = x
	return p
}

func (x FieldInfo_Rule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldInfo_Rule) Descriptor() protoreflect.EnumDescriptor {
	return file_TSPArchiveMessages_proto_enumTypes[1].Descriptor()
}

func (FieldInfo_Rule) Type() protoreflect.EnumType {
	return &file_TSPArchiveMessages_proto_enumTypes[1]
}

func (x FieldInfo_Rule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FieldInfo_Rule) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FieldInfo_Rule(num)
	return nil
}

// Deprecated: Use FieldInfo_Rule.Descriptor instead.
func (FieldInfo_Rule) EnumDescriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{2, 1}
}

type ArchiveInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier   *uint64        `protobuf:"varint,1,opt,name=identifier" json:"identifier,omitempty"`
	MessageInfos []*MessageInfo `protobuf:"bytes,2,rep,name=message_infos,json=messageInfos" json:"message_infos,omitempty"`
}

func (x *ArchiveInfo) Reset() {
	*x = ArchiveInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveInfo) ProtoMessage() {}

func (x *ArchiveInfo) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveInfo.ProtoReflect.Descriptor instead.
func (*ArchiveInfo) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{0}
}

func (x *ArchiveInfo) GetIdentifier() uint64 {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return 0
}

func (x *ArchiveInfo) GetMessageInfos() []*MessageInfo {
	if x != nil {
		return x.MessageInfos
	}
	return nil
}

type MessageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             *uint32      `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Version          []uint32     `protobuf:"varint,2,rep,packed,name=version" json:"version,omitempty"`
	Length           *uint32      `protobuf:"varint,3,req,name=length" json:"length,omitempty"`
	FieldInfos       []*FieldInfo `protobuf:"bytes,4,rep,name=field_infos,json=fieldInfos" json:"field_infos,omitempty"`
	ObjectReferences []uint64     `protobuf:"varint,5,rep,packed,name=object_references,json=objectReferences" json:"object_references,omitempty"`
	DataReferences   []uint64     `protobuf:"varint,6,rep,packed,name=data_references,json=dataReferences" json:"data_references,omitempty"`
}

func (x *MessageInfo) Reset() {
	*x = MessageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageInfo) ProtoMessage() {}

func (x *MessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageInfo.ProtoReflect.Descriptor instead.
func (*MessageInfo) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{1}
}

func (x *MessageInfo) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *MessageInfo) GetVersion() []uint32 {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *MessageInfo) GetLength() uint32 {
	if x != nil && x.Length != nil {
		return *x.Length
	}
	return 0
}

func (x *MessageInfo) GetFieldInfos() []*FieldInfo {
	if x != nil {
		return x.FieldInfos
	}
	return nil
}

func (x *MessageInfo) GetObjectReferences() []uint64 {
	if x != nil {
		return x.ObjectReferences
	}
	return nil
}

func (x *MessageInfo) GetDataReferences() []uint64 {
	if x != nil {
		return x.DataReferences
	}
	return nil
}

type FieldInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path             *FieldPath      `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	Type             *FieldInfo_Type `protobuf:"varint,2,opt,name=type,enum=TSP.FieldInfo_Type,def=0" json:"type,omitempty"`
	Rule             *FieldInfo_Rule `protobuf:"varint,3,opt,name=rule,enum=TSP.FieldInfo_Rule,def=0" json:"rule,omitempty"`
	ObjectReferences []uint64        `protobuf:"varint,4,rep,packed,name=object_references,json=objectReferences" json:"object_references,omitempty"`
	DataReferences   []uint64        `protobuf:"varint,5,rep,packed,name=data_references,json=dataReferences" json:"data_references,omitempty"`
}

// Default values for FieldInfo fields.
const (
	Default_FieldInfo_Type = FieldInfo_Value
	Default_FieldInfo_Rule = FieldInfo_IgnoreAndDrop
)

func (x *FieldInfo) Reset() {
	*x = FieldInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldInfo) ProtoMessage() {}

func (x *FieldInfo) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldInfo.ProtoReflect.Descriptor instead.
func (*FieldInfo) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{2}
}

func (x *FieldInfo) GetPath() *FieldPath {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *FieldInfo) GetType() FieldInfo_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_FieldInfo_Type
}

func (x *FieldInfo) GetRule() FieldInfo_Rule {
	if x != nil && x.Rule != nil {
		return *x.Rule
	}
	return Default_FieldInfo_Rule
}

func (x *FieldInfo) GetObjectReferences() []uint64 {
	if x != nil {
		return x.ObjectReferences
	}
	return nil
}

func (x *FieldInfo) GetDataReferences() []uint64 {
	if x != nil {
		return x.DataReferences
	}
	return nil
}

type FieldPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path []uint32 `protobuf:"varint,1,rep,packed,name=path" json:"path,omitempty"`
}

func (x *FieldPath) Reset() {
	*x = FieldPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldPath) ProtoMessage() {}

func (x *FieldPath) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldPath.ProtoReflect.Descriptor instead.
func (*FieldPath) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{3}
}

func (x *FieldPath) GetPath() []uint32 {
	if x != nil {
		return x.Path
	}
	return nil
}

type ComponentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier                               *uint64                       `protobuf:"varint,1,req,name=identifier" json:"identifier,omitempty"`
	PreferredLocator                         *string                       `protobuf:"bytes,2,req,name=preferred_locator,json=preferredLocator" json:"preferred_locator,omitempty"`
	Locator                                  *string                       `protobuf:"bytes,3,opt,name=locator" json:"locator,omitempty"`
	ReadVersion                              []uint32                      `protobuf:"varint,4,rep,packed,name=read_version,json=readVersion" json:"read_version,omitempty"`
	WriteVersion                             []uint32                      `protobuf:"varint,5,rep,packed,name=write_version,json=writeVersion" json:"write_version,omitempty"`
	ExternalReferences                       []*ComponentExternalReference `protobuf:"bytes,6,rep,name=external_references,json=externalReferences" json:"external_references,omitempty"`
	DataReferences                           []*ComponentDataReference     `protobuf:"bytes,7,rep,name=data_references,json=dataReferences" json:"data_references,omitempty"`
	AllowsDuplicatesOutsideOfDocumentPackage *bool                         `protobuf:"varint,8,opt,name=allows_duplicates_outside_of_document_package,json=allowsDuplicatesOutsideOfDocumentPackage,def=0" json:"allows_duplicates_outside_of_document_package,omitempty"`
	DirtiesDocumentPackage                   *bool                         `protobuf:"varint,9,opt,name=dirties_document_package,json=dirtiesDocumentPackage,def=1" json:"dirties_document_package,omitempty"`
	IsStoredOutsideObjectArchive             *bool                         `protobuf:"varint,10,opt,name=is_stored_outside_object_archive,json=isStoredOutsideObjectArchive,def=0" json:"is_stored_outside_object_archive,omitempty"`
}

// Default values for ComponentInfo fields.
const (
	Default_ComponentInfo_AllowsDuplicatesOutsideOfDocumentPackage = bool(false)
	Default_ComponentInfo_DirtiesDocumentPackage                   = bool(true)
	Default_ComponentInfo_IsStoredOutsideObjectArchive             = bool(false)
)

func (x *ComponentInfo) Reset() {
	*x = ComponentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentInfo) ProtoMessage() {}

func (x *ComponentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentInfo.ProtoReflect.Descriptor instead.
func (*ComponentInfo) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{4}
}

func (x *ComponentInfo) GetIdentifier() uint64 {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return 0
}

func (x *ComponentInfo) GetPreferredLocator() string {
	if x != nil && x.PreferredLocator != nil {
		return *x.PreferredLocator
	}
	return ""
}

func (x *ComponentInfo) GetLocator() string {
	if x != nil && x.Locator != nil {
		return *x.Locator
	}
	return ""
}

func (x *ComponentInfo) GetReadVersion() []uint32 {
	if x != nil {
		return x.ReadVersion
	}
	return nil
}

func (x *ComponentInfo) GetWriteVersion() []uint32 {
	if x != nil {
		return x.WriteVersion
	}
	return nil
}

func (x *ComponentInfo) GetExternalReferences() []*ComponentExternalReference {
	if x != nil {
		return x.ExternalReferences
	}
	return nil
}

func (x *ComponentInfo) GetDataReferences() []*ComponentDataReference {
	if x != nil {
		return x.DataReferences
	}
	return nil
}

func (x *ComponentInfo) GetAllowsDuplicatesOutsideOfDocumentPackage() bool {
	if x != nil && x.AllowsDuplicatesOutsideOfDocumentPackage != nil {
		return *x.AllowsDuplicatesOutsideOfDocumentPackage
	}
	return Default_ComponentInfo_AllowsDuplicatesOutsideOfDocumentPackage
}

func (x *ComponentInfo) GetDirtiesDocumentPackage() bool {
	if x != nil && x.DirtiesDocumentPackage != nil {
		return *x.DirtiesDocumentPackage
	}
	return Default_ComponentInfo_DirtiesDocumentPackage
}

func (x *ComponentInfo) GetIsStoredOutsideObjectArchive() bool {
	if x != nil && x.IsStoredOutsideObjectArchive != nil {
		return *x.IsStoredOutsideObjectArchive
	}
	return Default_ComponentInfo_IsStoredOutsideObjectArchive
}

type ComponentExternalReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComponentIdentifier *uint64 `protobuf:"varint,1,req,name=component_identifier,json=componentIdentifier" json:"component_identifier,omitempty"`
	ObjectIdentifier    *uint64 `protobuf:"varint,2,opt,name=object_identifier,json=objectIdentifier" json:"object_identifier,omitempty"`
	IsWeak              *bool   `protobuf:"varint,3,opt,name=is_weak,json=isWeak" json:"is_weak,omitempty"`
}

func (x *ComponentExternalReference) Reset() {
	*x = ComponentExternalReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentExternalReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentExternalReference) ProtoMessage() {}

func (x *ComponentExternalReference) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentExternalReference.ProtoReflect.Descriptor instead.
func (*ComponentExternalReference) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{5}
}

func (x *ComponentExternalReference) GetComponentIdentifier() uint64 {
	if x != nil && x.ComponentIdentifier != nil {
		return *x.ComponentIdentifier
	}
	return 0
}

func (x *ComponentExternalReference) GetObjectIdentifier() uint64 {
	if x != nil && x.ObjectIdentifier != nil {
		return *x.ObjectIdentifier
	}
	return 0
}

func (x *ComponentExternalReference) GetIsWeak() bool {
	if x != nil && x.IsWeak != nil {
		return *x.IsWeak
	}
	return false
}

type ComponentDataReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataIdentifier *uint64 `protobuf:"varint,1,req,name=data_identifier,json=dataIdentifier" json:"data_identifier,omitempty"`
}

func (x *ComponentDataReference) Reset() {
	*x = ComponentDataReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentDataReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentDataReference) ProtoMessage() {}

func (x *ComponentDataReference) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentDataReference.ProtoReflect.Descriptor instead.
func (*ComponentDataReference) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{6}
}

func (x *ComponentDataReference) GetDataIdentifier() uint64 {
	if x != nil && x.DataIdentifier != nil {
		return *x.DataIdentifier
	}
	return 0
}

type PackageMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastObjectIdentifier *uint64          `protobuf:"varint,1,req,name=last_object_identifier,json=lastObjectIdentifier" json:"last_object_identifier,omitempty"`
	Components           []*ComponentInfo `protobuf:"bytes,3,rep,name=components" json:"components,omitempty"`
	Datas                []*DataInfo      `protobuf:"bytes,4,rep,name=datas" json:"datas,omitempty"`
	ReadVersion          []uint32         `protobuf:"varint,5,rep,packed,name=read_version,json=readVersion" json:"read_version,omitempty"`
	WriteVersion         []uint32         `protobuf:"varint,6,rep,packed,name=write_version,json=writeVersion" json:"write_version,omitempty"`
}

func (x *PackageMetadata) Reset() {
	*x = PackageMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageMetadata) ProtoMessage() {}

func (x *PackageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageMetadata.ProtoReflect.Descriptor instead.
func (*PackageMetadata) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{7}
}

func (x *PackageMetadata) GetLastObjectIdentifier() uint64 {
	if x != nil && x.LastObjectIdentifier != nil {
		return *x.LastObjectIdentifier
	}
	return 0
}

func (x *PackageMetadata) GetComponents() []*ComponentInfo {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *PackageMetadata) GetDatas() []*DataInfo {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *PackageMetadata) GetReadVersion() []uint32 {
	if x != nil {
		return x.ReadVersion
	}
	return nil
}

func (x *PackageMetadata) GetWriteVersion() []uint32 {
	if x != nil {
		return x.WriteVersion
	}
	return nil
}

type PasteboardMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version            []uint32    `protobuf:"varint,1,rep,packed,name=version" json:"version,omitempty"`
	AppName            *string     `protobuf:"bytes,2,req,name=app_name,json=appName" json:"app_name,omitempty"`
	Datas              []*DataInfo `protobuf:"bytes,3,rep,name=datas" json:"datas,omitempty"`
	SourceDocumentUuid *string     `protobuf:"bytes,4,opt,name=source_document_uuid,json=sourceDocumentUuid" json:"source_document_uuid,omitempty"`
}

func (x *PasteboardMetadata) Reset() {
	*x = PasteboardMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasteboardMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasteboardMetadata) ProtoMessage() {}

func (x *PasteboardMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasteboardMetadata.ProtoReflect.Descriptor instead.
func (*PasteboardMetadata) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{8}
}

func (x *PasteboardMetadata) GetVersion() []uint32 {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *PasteboardMetadata) GetAppName() string {
	if x != nil && x.AppName != nil {
		return *x.AppName
	}
	return ""
}

func (x *PasteboardMetadata) GetDatas() []*DataInfo {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *PasteboardMetadata) GetSourceDocumentUuid() string {
	if x != nil && x.SourceDocumentUuid != nil {
		return *x.SourceDocumentUuid
	}
	return ""
}

type DataInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier                 *uint64 `protobuf:"varint,1,req,name=identifier" json:"identifier,omitempty"`
	Digest                     []byte  `protobuf:"bytes,2,req,name=digest" json:"digest,omitempty"`
	PreferredFileName          *string `protobuf:"bytes,3,req,name=preferred_file_name,json=preferredFileName" json:"preferred_file_name,omitempty"`
	FileName                   *string `protobuf:"bytes,4,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	DocumentResourceLocator    *string `protobuf:"bytes,5,opt,name=document_resource_locator,json=documentResourceLocator" json:"document_resource_locator,omitempty"`
	SourceBookmarkData         []byte  `protobuf:"bytes,6,opt,name=source_bookmark_data,json=sourceBookmarkData" json:"source_bookmark_data,omitempty"`
	PasteboardExternalFilePath *string `protobuf:"bytes,99,opt,name=pasteboard_external_file_path,json=pasteboardExternalFilePath" json:"pasteboard_external_file_path,omitempty"`
}

func (x *DataInfo) Reset() {
	*x = DataInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataInfo) ProtoMessage() {}

func (x *DataInfo) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataInfo.ProtoReflect.Descriptor instead.
func (*DataInfo) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{9}
}

func (x *DataInfo) GetIdentifier() uint64 {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return 0
}

func (x *DataInfo) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *DataInfo) GetPreferredFileName() string {
	if x != nil && x.PreferredFileName != nil {
		return *x.PreferredFileName
	}
	return ""
}

func (x *DataInfo) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *DataInfo) GetDocumentResourceLocator() string {
	if x != nil && x.DocumentResourceLocator != nil {
		return *x.DocumentResourceLocator
	}
	return ""
}

func (x *DataInfo) GetSourceBookmarkData() []byte {
	if x != nil {
		return x.SourceBookmarkData
	}
	return nil
}

func (x *DataInfo) GetPasteboardExternalFilePath() string {
	if x != nil && x.PasteboardExternalFilePath != nil {
		return *x.PasteboardExternalFilePath
	}
	return ""
}

type ViewStateMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version             []uint32       `protobuf:"varint,1,rep,packed,name=version" json:"version,omitempty"`
	DocumentVersionUuid *string        `protobuf:"bytes,2,req,name=document_version_uuid,json=documentVersionUuid" json:"document_version_uuid,omitempty"`
	Component           *ComponentInfo `protobuf:"bytes,3,req,name=component" json:"component,omitempty"`
}

func (x *ViewStateMetadata) Reset() {
	*x = ViewStateMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewStateMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewStateMetadata) ProtoMessage() {}

func (x *ViewStateMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewStateMetadata.ProtoReflect.Descriptor instead.
func (*ViewStateMetadata) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{10}
}

func (x *ViewStateMetadata) GetVersion() []uint32 {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *ViewStateMetadata) GetDocumentVersionUuid() string {
	if x != nil && x.DocumentVersionUuid != nil {
		return *x.DocumentVersionUuid
	}
	return ""
}

func (x *ViewStateMetadata) GetComponent() *ComponentInfo {
	if x != nil {
		return x.Component
	}
	return nil
}

var File_TSPArchiveMessages_proto protoreflect.FileDescriptor

var file_TSPArchiveMessages_proto_rawDesc = []byte{
	0x0a, 0x18, 0x54, 0x53, 0x50, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x54, 0x53, 0x50, 0x22,
	0x64, 0x0a, 0x0b, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x35,
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xe6, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x2f, 0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x2f, 0x0a, 0x11, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x04, 0x42, 0x02, 0x10, 0x01, 0x52,
	0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x12, 0x2b, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0e,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x9e,
	0x03, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x54, 0x53, 0x50,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x54, 0x53, 0x50, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x3a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x36, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x54, 0x53, 0x50, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52,
	0x75, 0x6c, 0x65, 0x3a, 0x0d, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41, 0x6e, 0x64, 0x44, 0x72,
	0x6f, 0x70, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x11, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x04, 0x42, 0x02, 0x10, 0x01, 0x52, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x0f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x04, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x10, 0x01, 0x12, 0x11,
	0x0a, 0x0d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x03, 0x22, 0x5f,
	0x0a, 0x04, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x41, 0x6e, 0x64, 0x44, 0x72, 0x6f, 0x70, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x75, 0x73, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x22,
	0x23, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x22, 0xd5, 0x04, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x10, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a,
	0x0c, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0d, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52,
	0x0c, 0x77, 0x72, 0x69, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a,
	0x13, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x54, 0x53, 0x50,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x12, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x44, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x2d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x5f,
	0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x69,
	0x64, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0x52, 0x28, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x44, 0x75, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x66, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a,
	0x18, 0x64, 0x69, 0x72, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x3a,
	0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x16, 0x64, 0x69, 0x72, 0x74, 0x69, 0x65, 0x73, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a,
	0x20, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x69,
	0x64, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x1c,
	0x69, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x22, 0x95, 0x01, 0x0a,
	0x1a, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2b,
	0x0a, 0x11, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x73, 0x5f, 0x77, 0x65, 0x61, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73,
	0x57, 0x65, 0x61, 0x6b, 0x22, 0x41, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0xf0, 0x01, 0x0a, 0x0f, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x16, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x14, 0x6c, 0x61, 0x73,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x12, 0x25, 0x0a, 0x0c, 0x72, 0x65,
	0x61, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d,
	0x42, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x27, 0x0a, 0x0d, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa4, 0x01, 0x0a, 0x12, 0x50,
	0x61, 0x73, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x53, 0x50, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x12,
	0x30, 0x0a, 0x14, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x22, 0xc0, 0x02, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x04, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x06,
	0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x30, 0x0a, 0x14, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61,
	0x72, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x41, 0x0a, 0x1d, 0x70, 0x61, 0x73, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x63, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x70, 0x61, 0x73, 0x74, 0x65, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x22, 0x97, 0x01, 0x0a, 0x11, 0x56, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x13, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x42, 0x20,
	0x5a, 0x1e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x61, 0x6a, 0x61, 0x72, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x64, 0x6f, 0x63, 0x63, 0x6f, 0x6e, 0x76, 0x2f, 0x76, 0x32, 0x2f, 0x74, 0x73, 0x70,
}

var (
	file_TSPArchiveMessages_proto_rawDescOnce sync.Once
	file_TSPArchiveMessages_proto_rawDescData = file_TSPArchiveMessages_proto_rawDesc
)

func file_TSPArchiveMessages_proto_rawDescGZIP() []byte {
	file_TSPArchiveMessages_proto_rawDescOnce.Do(func() {
		file_TSPArchiveMessages_proto_rawDescData = protoimpl.X.CompressGZIP(file_TSPArchiveMessages_proto_rawDescData)
	})
	return file_TSPArchiveMessages_proto_rawDescData
}

var file_TSPArchiveMessages_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_TSPArchiveMessages_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_TSPArchiveMessages_proto_goTypes = []interface{}{
	(FieldInfo_Type)(0),                // 0: TSP.FieldInfo.Type
	(FieldInfo_Rule)(0),                // 1: TSP.FieldInfo.Rule
	(*ArchiveInfo)(nil),                // 2: TSP.ArchiveInfo
	(*MessageInfo)(nil),                // 3: TSP.MessageInfo
	(*FieldInfo)(nil),                  // 4: TSP.FieldInfo
	(*FieldPath)(nil),                  // 5: TSP.FieldPath
	(*ComponentInfo)(nil),              // 6: TSP.ComponentInfo
	(*ComponentExternalReference)(nil), // 7: TSP.ComponentExternalReference
	(*ComponentDataReference)(nil),     // 8: TSP.ComponentDataReference
	(*PackageMetadata)(nil),            // 9: TSP.PackageMetadata
	(*PasteboardMetadata)(nil),         // 10: TSP.PasteboardMetadata
	(*DataInfo)(nil),                   // 11: TSP.DataInfo
	(*ViewStateMetadata)(nil),          // 12: TSP.ViewStateMetadata
}
var file_TSPArchiveMessages_proto_depIdxs = []int32{
	3,  // 0: TSP.ArchiveInfo.message_infos:type_name -> TSP.MessageInfo
	4,  // 1: TSP.MessageInfo.field_infos:type_name -> TSP.FieldInfo
	5,  // 2: TSP.FieldInfo.path:type_name -> TSP.FieldPath
	0,  // 3: TSP.FieldInfo.type:type_name -> TSP.FieldInfo.Type
	1,  // 4: TSP.FieldInfo.rule:type_name -> TSP.FieldInfo.Rule
	7,  // 5: TSP.ComponentInfo.external_references:type_name -> TSP.ComponentExternalReference
	8,  // 6: TSP.ComponentInfo.data_references:type_name -> TSP.ComponentDataReference
	6,  // 7: TSP.PackageMetadata.components:type_name -> TSP.ComponentInfo
	11, // 8: TSP.PackageMetadata.datas:type_name -> TSP.DataInfo
	11, // 9: TSP.PasteboardMetadata.datas:type_name -> TSP.DataInfo
	6,  // 10: TSP.ViewStateMetadata.component:type_name -> TSP.ComponentInfo
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_TSPArchiveMessages_proto_init() }
func file_TSPArchiveMessages_proto_init() {
	if File_TSPArchiveMessages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_TSPArchiveMessages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentExternalReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentDataReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasteboardMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewStateMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_TSPArchiveMessages_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_TSPArchiveMessages_proto_goTypes,
		DependencyIndexes: file_TSPArchiveMessages_proto_depIdxs,
		EnumInfos:         file_TSPArchiveMessages_proto_enumTypes,
		MessageInfos:      file_TSPArchiveMessages_proto_msgTypes,
	}.Build()
	File_TSPArchiveMessages_proto = out.File
	file_TSPArchiveMessages_proto_rawDesc = nil
	file_TSPArchiveMessages_proto_goTypes = nil
	file_TSPArchiveMessages_proto_depIdxs = nil
}
